<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Conceito de Probabilidade, Explicação- Probabilidade é a chance de um evento ocorrer, expressa como um valor entre 0 e 1 ou em porcentagem.
Fórmula Básica, Explicação - P(A) = Casos Favoráveis / Casos Possíveis. Exemplo: Ao lançar um dado de 6 faces, a chance de sair um número par é 3/6 = 50%.
Probabilidade Condicional, Explicação - A probabilidade de um evento ocorrer dado que outro evento já aconteceu. Fórmula: P(A|B) = P(A ∩ B) / P(B).
Distribuição de Frequência, Explicação - Organização de dados em tabelas para analisar a frequência de ocorrência de valores.


</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>